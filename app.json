{
  "name": "docai-service",
  "env": {
    "GCP_DOCAI_REGION": {
      "value": "us",
      "description": "Region (eu or us) where the Document AI form processor is deployed."
    },
    "GCP_DOCAI_PROCESSOR_ID": {
        "description": "The Document AI form processor ID from the deployment (visible in the overview information for the processor)."
    },
    "API_KEY": {
        "generator": "secret",
        "description": "A secret that to be used to access the API."
    }
  },
  "options": {
    "allow-unauthenticated": true
  },
  "hooks": {
    "postbuild": {
      "commands": [
        "gcloud config set project $GOOGLE_CLOUD_PROJECT",
        "gcloud services enable appengine.googleapis.com",
        "gcloud services enable firestore.googleapis.com",
        "gcloud services enable aiplatform.googleapis.com",
        "gcloud services enable documentai.googleapis.com",
        "gcloud services enable drive.googleapis.com",
        "if [[ $(gcloud app describe 2>&1 || true) == *'ERROR'* ]]; then echo 'No app engine or firestore instances found, creating...' && gcloud app create --region=us; fi",
        "gcloud alpha firestore databases update --type=firestore-native",
        "echo 'Now creating service account with correct permissions..'",
        "PROJECTNUMBER=$(gcloud projects list --filter=\"$(gcloud config get-value project)\" --format=\"value(PROJECT_NUMBER)\") && gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT --member=\"serviceAccount:$PROJECTNUMBER-compute@developer.gserviceaccount.com\" --role='roles/datastore.user'",
        "PROJECTNUMBER=$(gcloud projects list --filter=\"$(gcloud config get-value project)\" --format=\"value(PROJECT_NUMBER)\") && gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT --member=\"serviceAccount:$PROJECTNUMBER-compute@developer.gserviceaccount.com\" --role='roles/aiplatform.user'",
        "PROJECTNUMBER=$(gcloud projects list --filter=\"$(gcloud config get-value project)\" --format=\"value(PROJECT_NUMBER)\") && gcloud projects add-iam-policy-binding $GOOGLE_CLOUD_PROJECT --member=\"serviceAccount:$PROJECTNUMBER-compute@developer.gserviceaccount.com\" --role='roles/documentai.apiUser'",        
        "PROJECTNUMBER=$(gcloud projects list --filter=\"$(gcloud config get-value project)\" --format=\"value(PROJECT_NUMBER)\") && echo \"Add user $PROJECTNUMBER-compute@developer.gserviceaccount.com to your AppSheet Google Drive folder with Read permissions.\"",
        "echo 'Now importing some test data..'",
        "./2_loaddata.sh"
      ]
    }
  }
}